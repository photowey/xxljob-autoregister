<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="severity" value="error"/>
    <property name="charset" value="UTF-8"/>
    <property name="fileExtensions" value="java"/>

    <module name="TreeWalker">
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <module name="AvoidStarImport"/>
        <module name="ImportOrder">
            <property name="groups" value="/^java\./,/^(javax|jakarta)\./,*"/>
            <property name="ordered" value="true"/>
            <property name="separated" value="true"/>
            <property name="sortStaticImportsAlphabetically" value="true"/>
            <property name="option" value="bottom"/>
        </module>

        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="StaticVariableName"/>
        <module name="EqualsHashCode"/>

        <module name="InnerAssignment"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="FinalClass"/>
        <module name="InterfaceIsType"/>

        <module name="StringLiteralEquality"/>

        <module name="NestedForDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth ">
            <property name="max" value="3"/>
        </module>

        <module name="SuperClone"/>
        <module name="SuperFinalize"/>

        <module name="Regexp">
            <property name="format" value="System\.out\.println"/>
            <property name="illegalPattern" value="true"/>
        </module>

        <module name="MethodLength">
            <property name="tokens" value="METHOD_DEF"/>
            <property name="max" value="80"/>
        </module>

        <module name="ParameterNumber">
            <property name="max" value="5"/>
            <property name="ignoreOverriddenMethods" value="true"/>
            <property name="tokens" value="METHOD_DEF"/>
        </module>

        <module name="UncommentedMain">
            <property name="excludedClasses" value=".*[App,Application,Test]$"/>
        </module>

        <module name="VisibilityModifier">
            <property name="packageAllowed" value="true"/>
            <property name="protectedAllowed" value="true"/>
        </module>

        <module name="HiddenField">
            <property name="tokens" value="VARIABLE_DEF"/>
        </module>

        <module name="OuterTypeFilename"/>
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property name="format"
                      value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
            <property name="message" value="Avoid using corresponding octal or Unicode escape."/>
        </module>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
            <property name="severity" value="ignore"/>
        </module>
        <module name="AvoidStarImport"/>
        <module name="OneTopLevelClass"/>
        <module name="NoLineWrap"/>
        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens"
                      value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>
        <module name="NeedBraces">
            <property name="tokens" value="LITERAL_DO,LITERAL_FOR,LITERAL_WHILE"/>
        </module>
        <module name="LeftCurly"/>
        <module name="RightCurly">
            <property name="option" value="alone_or_singleline"/>
            <property name="tokens"
                      value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT"/>
        </module>
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <message key="ws.notPreceded" value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
            <message key="ws.notFollowed" value="WhitespaceAround: ''{0}'' is not followed by whitespace."/>
        </module>
        <module name="OneStatementPerLine"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="ArrayTypeStyle"/>
        <module name="MissingSwitchDefault"/>
        <module name="FallThrough"/>
        <module name="UpperEll"/>

        <module name="RedundantModifier"/>
        <module name="AvoidNestedBlocks"/>

        <module name="ModifierOrder">
            <property name="severity" value="ignore"/>
            <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
        </module>
        <module name="EmptyLineSeparator">
            <property name="tokens"
                      value="IMPORT,CLASS_DEF,ENUM_DEF,INTERFACE_DEF,CTOR_DEF,METHOD_DEF,STATIC_INIT,INSTANCE_INIT,VARIABLE_DEF"/>
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
        </module>
        <module name="SeparatorWrap">
            <property name="option" value="nl"/>
            <property name="tokens" value="DOT"/>
        </module>
        <module name="SeparatorWrap">
            <property name="option" value="EOL"/>
            <property name="tokens" value="COMMA"/>
        </module>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern" value="Package name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="TypeName">
            <message key="name.invalidPattern" value="Type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MemberName">
            <message key="name.invalidPattern" value="Member name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="ParameterName">
            <message key="name.invalidPattern" value="Parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="LocalVariableName">
            <property name="allowOneCharVarInForLoop" value="true"/>
            <property name="tokens" value="VARIABLE_DEF"/>
            <message key="name.invalidPattern" value="Local variable name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern" value="Class type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern" value="Method type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="NoFinalizer"/>
        <module name="GenericWhitespace">
            <message key="ws.notPreceded" value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
            <message key="ws.followed" value="GenericWhitespace ''{0}'' is followed by whitespace."/>
            <message key="ws.preceded" value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
            <message key="ws.illegalFollow" value="GenericWhitespace ''{0}'' should followed by whitespace."/>
        </module>
        <module name="Indentation"/>
        <module name="AbbreviationAsWordInName">
            <property name="severity" value="ignore"/>
            <property name="allowedAbbreviationLength" value="1"/>
            <property name="ignoreFinal" value="false"/>
            <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
        </module>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="VariableDeclarationUsageDistance"/>

        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="TypecastParenPad"/>

        <module name="MethodParamPad"/>
        <module name="OperatorWrap">
            <property name="option" value="NL"/>
            <property name="tokens"
                      value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF,
                      LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR "/>
        </module>
        <module name="AnnotationLocation">
            <property name="tokens" value="CLASS_DEF,INTERFACE_DEF,ENUM_DEF,METHOD_DEF,CTOR_DEF"/>
            <property name="allowSamelineMultipleAnnotations" value="true"/>
        </module>
        <module name="AnnotationLocation">
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="allowSamelineMultipleAnnotations" value="true"/>
        </module>
        <module name="NonEmptyAtclauseDescription">
            <property name="severity" value="ignore"/>
        </module>

        <module name="JavadocType">
            <property name="allowUnknownTags" value="true"/>
            <message key="javadoc.missing" value="Missing javadoc"/>
        </module>

        <module name="JavadocTagContinuationIndentation"/>
        <module name="SummaryJavadocCheck">
            <property name="severity" value="ignore"/>
        </module>
        <module name="JavadocParagraph"/>
        <module name="AtclauseOrder">
            <property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
            <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
        </module>
        <module name="JavadocStyle">
            <property name="scope" value="nothing"/>
        </module>
        <module name="MissingJavadocMethod">
            <property name="severity" value="ignore"/>
            <property name="minLineCount" value="2"/>
        </module>
        <module name="JavadocMethod">
            <property name="allowedAnnotations" value="Override, Test"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingReturnTag" value="true"/>
        </module>
        <module name="MethodName">
            <property name="format" value="^_?[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
            <message key="name.invalidPattern" value="Method name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="SingleLineJavadoc">
            <property name="severity" value="ignore"/>
            <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
        </module>
    </module>

    <module name="LineLength">
        <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
        <property name="max" value="120"/>
    </module>
    <module name="FileTabCharacter">
        <property name="severity" value="error"/>
        <property name="eachLine" value="true"/>
    </module>

    <module name="RegexpOnFilename">
        <property name="folderPattern" value="[\\/]controller[\\/]?"/>
        <property name="fileExtensions" value="java"/>
        <property name="fileNamePattern" value="^[A-Z][a-zA-Z0-9]*Controller\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filename.mismatch"
                 value="Controller names in the controller package must end with 'Controller'."/>
    </module>

    <module name="RegexpOnFilename">
        <property name="folderPattern" value="[\\/]service(?![\\/]?impl[\\/]?).*"/>
        <property name="fileExtensions" value="java"/>
        <property name="fileNamePattern" value="^[A-Z][a-zA-Z0-9]*(Service|ServiceTest)\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filename.mismatch"
                 value="Interface names in the service package must end with 'Service'."/>
    </module>

    <module name="RegexpOnFilename">
        <property name="folderPattern" value="[\\/]service[\\/]impl[\\/]?"/>
        <property name="fileExtensions" value="java"/>
        <property name="fileNamePattern" value="^[A-Z][a-zA-Z0-9]*ServiceImpl\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filename.mismatch"
                 value="Class names in the service.impl package must end with 'ServiceImpl'."/>
    </module>

    <module name="RegexpOnFilename">
        <property name="folderPattern" value="[\\/]dao(?![\\/]?impl[\\/]?).*"/>
        <property name="fileExtensions" value="java"/>
        <property name="fileNamePattern" value="^[A-Z][a-zA-Z0-9]*(DAO|DAOTest)\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filename.mismatch"
                 value="Interface names in the dao package must end with 'DAO' or 'DAOTest'."/>
    </module>

    <module name="RegexpOnFilename">
        <property name="folderPattern" value="[\\/]dao[\\/]impl[\\/]?"/>
        <property name="fileExtensions" value="java"/>
        <property name="fileNamePattern" value="^[A-Z][a-zA-Z0-9]*DAOImpl\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filename.mismatch"
                 value="Class names in the dao.impl package must end with 'DAOImpl'."/>
    </module>

    <module name="RegexpOnFilename">
        <property name="folderPattern" value="[\\/]mapper[\\/]?"/>
        <property name="fileExtensions" value="java"/>
        <property name="fileNamePattern" value="^[A-Z][a-zA-Z0-9]*Mapper\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filename.mismatch"
                 value="Interface names in the mapper package must end with 'Mapper'."/>
    </module>

    <module name="RegexpOnFilename">
        <property name="folderPattern" value="[\\/]repository[\\/]?"/>
        <property name="fileExtensions" value="java"/>
        <property name="fileNamePattern" value="^[A-Z][a-zA-Z0-9]*Repository\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filename.mismatch"
                 value="Interface names in the repository package must end with 'Repository'."/>
    </module>

    <module name="RegexpOnFilename">
        <property name="folderPattern" value="[\\/]query[\\/]?"/>
        <property name="fileExtensions" value="java"/>
        <property name="fileNamePattern" value="^[A-Z][a-zA-Z0-9]*Query\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filename.mismatch"
                 value="Query class names must end with 'Query'."/>
    </module>

    <module name="RegexpOnFilename">
        <property name="folderPattern" value="[\\/]payload[\\/]?"/>
        <property name="fileExtensions" value="java"/>
        <property name="fileNamePattern" value="^([A-Z][a-zA-Z0-9]*)?Payload\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filename.mismatch"
                 value="Payload class names must end with 'Payload'."/>
    </module>

    <module name="RegexpOnFilename">
        <property name="folderPattern" value="[\\/]dto[\\/]?"/>
        <property name="fileExtensions" value="java"/>
        <property name="fileNamePattern" value="^[A-Z][a-zA-Z0-9]*DTO\.java$"/>
        <property name="match" value="false"/>
        <message key="regexp.filename.mismatch"
                 value="DTO class names must end with 'DTO'."/>
    </module>

    <module name="SuppressionFilter">
        <property name="file" value="codequality/checkstyle/checkstyle-suppressions.xml"/>
    </module>
</module>
